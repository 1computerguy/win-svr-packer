configuration SetDns
{
    $ParentDomainName='{{ domain_name }}'
    $ChildDomainName='{{ child_domain_name }}'
    $ChildFQDN='{{ child_domain_name }}.{{ domain_name }}'
    $RootDNSServers="{{ rootdnsserver.0 }}","{{ rootdnsserver.1 }}"
    $ChildDNSServers="{{ childdnsserver.0 }}","{{ childdnsserver.1 }}"
    $DNSForwarder='{{ upstreamdns }}'
    $AllDNSServers="{{ rootdnsserver.0 }}","{{ rootdnsserver.1 }}","{{ childdnsserver.0 }}","{{ childdnsserver.1 }}"
    $DomainMember = (Get-WmiObject -Class Win32_ComputerSystem).PartOfDomain

    if ( $DomainMember -eq "True" )
    {
        $DomainName = (Get-WmiObject -Class Win32_ComputerSystem).Domain
    }
    else
    {
        $DomainName = 'none'
    }

    $Interface = Get-NetAdapter | Where-Object Name -Like "Ethernet*" | Select-Object -First 1
    $InterfaceAlias = $($Interface.Name)


    if ( $DomainMember -eq "True" )
    {
        $DomainRole = (Get-WmiObject -Class Win32_ComputerSystem).DomainRole
        $DomainRoleValues = "3","5","6"
        if ( ($DomainName -eq $ParentDomainName ) -and ( $DomainRole -in $DomainRoleValues ) )
        {
            Write-Host "You're a Root Server!"
            $DNSServers = $RootDNSServers
            Write-Host "Your DNS Servers will be " $DNSServers
        }
        elseif ( ($DomainName -eq $ChildFQDN ) -and ( $DomainRole -in $DomainRoleValues ) )
        {
            Write-Host "You're a Child Server!"
            $DNSServers = $ChildDNSServers
            Write-Host "Your DNS Servers will be " $DNSServers
        }
        else
        {
            Write-Host "You're broken, let's set your DNS to everything"
            $DNSServers = $AllDNSServers
            Write-Host "Your DNS Servers will be " $DNSServers
        }
    }
    else
    {
        Write-Host "You're broken, let's set your DNS to everything"
        $DNSServers = $AllDNSServers
        Write-Host "Your DNS Servers will be " $DNSServers
    }       

    Import-DscResource -ModuleName PSDesiredStateConfiguration, xDnsServer, xNetworking

    Node localhost
    {
        LocalConfigurationManager
        {
            ConfigurationMode = 'ApplyOnly'
            RebootNodeIfNeeded = $true
        }
        #
        xDnsServerAddress DnsServerAddress
        {
            Address        = $DnsServers
            InterfaceAlias = $InterfaceAlias
            AddressFamily  = 'IPv4'
        }

    }
}

SetDns

Set-DSCLocalConfigurationManager -Computername localhost -Path .\SetDns -Force -Verbose

Start-DscConfiguration -Wait -Force -Path .\SetDns -Verbose     